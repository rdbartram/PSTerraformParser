Refreshing Terraform state in-memory prior to plan...
The refreshed state will be used to calculate this plan, but will not be
persisted to local or remote state storage.

aws_alb_target_group.sample_app: Refreshing state... (ID: arn:aws:elasticloadbalancing:us-east-1:...up/sample-app/d5eedf0680cc9834)
aws_iam_role.service_role: Refreshing state... (ID: SampleApp)
aws_cloudwatch_log_group.sample_app: Refreshing state... (ID: sample-app)
aws_ecr_repository.sample_app: Refreshing state... (ID: sample-app)
aws_iam_role_policy.service_role_policy: Refreshing state... (ID: SampleApp:SampleApp)
null_resource.promote_images: Refreshing state... (ID: 1236159896537553123)
aws_ecs_task_definition.sample_app: Refreshing state... (ID: sample-app)
aws_alb_listener_rule.routing: Refreshing state... (ID: arn:aws:elasticloadbalancing:us-east-1:...94bc/2825bddee1920172/ec8bc47bb5409ead)
aws_ecs_service.sample_app: Refreshing state... (ID: arn:aws:ecs:us-east-1:123123123123:service/sample-app)

------------------------------------------------------------------------

An execution plan has been generated and is shown below.
Resource actions are indicated with the following symbols:
  ~ update in-place
-/+ destroy and then create replacement
 <= read (data resources)

Terraform will perform the following actions:

  ~ aws_ecs_service
      task_definition:          "this is a test"


Plan: 2 to add, 1 to change, 2 to destroy.

------------------------------------------------------------------------

This plan was saved to: terraform.plan

To perform exactly these actions, run the following command to apply:
    terraform apply "terraform.plan"
